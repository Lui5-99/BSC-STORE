@page "/login"
@using BSC.Models.DTOs.User
@inject ApiClient ApiClient
@inject AuthService AuthService
@inject NavigationManager Nav
@layout EmptyLayout

<EditForm Model="loginDto" OnValidSubmit="HandleLogin" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-2">@errorMessage</div>
    }

    <div class="form-group">
        <label for="username">Usuario</label>
        <InputText id="username" class="form-control" @bind-Value="loginDto.Username" />
        <ValidationMessage For="@(() => loginDto.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginDto.Password" />
        <ValidationMessage For="@(() => loginDto.Password)" />
    </div>

    <button class="btn btn-primary mt-3" type="submit" disabled="@isSubmitting">
        @if (isSubmitting)
        {
            <span class="spinner-border spinner-border-sm"></span>
            <>{"Iniciando..."}</>
        }
        else
        {
            <>{"Iniciar Sesion"}</>
        }
    </button>
</EditForm>

@code {
    private UserLoginDto loginDto = new()
    {
        Username = string.Empty,
        Password = string.Empty
    };
    private string errorMessage = string.Empty;
    private bool isSubmitting = false;

    private async Task HandleLogin()
    {
        isSubmitting = true;
        errorMessage = string.Empty;

        try
        {
            var result = await ApiClient.LoginAsync<UserLoginDto, AuthResponseDto>("auth/login", loginDto);

            if (result is not null && !string.IsNullOrEmpty(result.Token))
            {
                await AuthService.SaveTokenAsync(result.Token);
                Nav.NavigateTo("/", true);
            }
            else
            {
                errorMessage = "Usuario o contraseña incorrectos.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error de login: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
